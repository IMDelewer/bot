#!/bin/bash
set -euo pipefail

# === Config ===
GITHUB_RAW_BASE="https://raw.githubusercontent.com/imdelewer/bot/main"
MAIN_PY_URL="$GITHUB_RAW_BASE/main.py"
REQS_URL="$GITHUB_RAW_BASE/requirements.txt"

INSTALL_DIR="/usr/local/bin/bot"
SERVICE_NAME="bot.service"

# === Colors ===
GREEN='\033[1;32m'
YELLOW='\033[1;33m'
RED='\033[1;31m'
NC='\033[0m'

log()   { echo -e "${GREEN}[INFO]${NC} $1"; }
warn()  { echo -e "${YELLOW}[WARN]${NC} $1"; }
error() { echo -e "${RED}[ERROR]${NC} $1"; }

# === 2. Setup directory & venv ===
log "Preparing bot directory..."
mkdir -p "$INSTALL_DIR"
cd "$INSTALL_DIR"

log "Creating virtual environment..."
PYTHON_BIN=$(which python3 || true)
if [[ -z "$PYTHON_BIN" ]]; then
  error "Python3 not found!"
  exit 1
fi

$PYTHON_BIN -m venv venv
source venv/bin/activate

log "Upgrading pip..."
pip install --upgrade pip

# === 3. Download project files ===
log "Downloading main.py..."
wget -O main.py "$MAIN_PY_URL"

log "Downloading requirements.txt..."
wget -O requirements.txt "$REQS_URL"

# === 3.1 Ask for Telegram token and write to main.py ===
read -rp "Введите токен вашего Telegram-бота: " BOT_TOKEN

# Если в main.py уже есть строка TOKEN, заменяем её
if grep -q '^TOKEN =' main.py; then
    sed -i "s|^TOKEN =.*|TOKEN = \"$BOT_TOKEN\"|" main.py
else
    # Иначе вставляем в начало файла
    sed -i "1iTOKEN = \"$BOT_TOKEN\"" main.py
fi
log "Токен записан в main.py"

# === 4. Install deps ===
log "Installing dependencies..."
pip install -r requirements.txt

# === 5. Create systemd service ===
SERVICE_FILE="/etc/systemd/system/$SERVICE_NAME"
log "Creating systemd service..."

cat > "$SERVICE_FILE" <<EOF
[Unit]
Description=Telegram Bot Service
After=network.target

[Service]
Type=simple
User=root
WorkingDirectory=$INSTALL_DIR
ExecStart=$INSTALL_DIR/venv/bin/python3 main.py
Restart=always

[Install]
WantedBy=multi-user.target
EOF

log "Reloading systemd..."
systemctl daemon-reexec
systemctl daemon-reload
systemctl enable $SERVICE_NAME
systemctl restart $SERVICE_NAME

log "Bot service started!"
systemctl status $SERVICE_NAME --no-pager