#!/bin/bash
set -euo pipefail

# === Config ===
GITHUB_RAW_BASE="https://raw.githubusercontent.com/imdelewer/bot/main"
MAIN_PY_URL="$GITHUB_RAW_BASE/main.py"
REQS_URL="$GITHUB_RAW_BASE/requirements.txt"

INSTALL_DIR="/usr/local/bin/bot"
SERVICE_NAME="bot.service"
TARGET_PYTHON="3.12"
MIN_PYTHON="3.10"

# === Colors ===
GREEN='\033[1;32m'
YELLOW='\033[1;33m'
RED='\033[1;31m'
NC='\033[0m'

log()   { echo -e "${GREEN}[INFO]${NC} $1"; }
warn()  { echo -e "${YELLOW}[WARN]${NC} $1"; }
error() { echo -e "${RED}[ERROR]${NC} $1"; }

# === 1. Python check ===
log "Checking Python version..."
if command -v python3 >/dev/null; then
  CURRENT_VERSION=$(python3 -c 'import sys; print(".".join(map(str, sys.version_info[:2])))')
  log "Detected Python $CURRENT_VERSION"
else
  CURRENT_VERSION="0.0"
fi

if [[ "$(printf '%s\n' "$MIN_PYTHON" "$CURRENT_VERSION" | sort -V | head -n1)" != "$MIN_PYTHON" ]]; then
  warn "Python < $MIN_PYTHON found. Installing Python $TARGET_PYTHON..."
  apt update
  apt install -y wget build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev \
    libssl-dev libreadline-dev libffi-dev curl libbz2-dev libsqlite3-dev liblzma-dev

  cd /usr/src
  wget -nc "https://www.python.org/ftp/python/$TARGET_PYTHON.0/Python-$TARGET_PYTHON.0.tgz"
  tar -xf "Python-$TARGET_PYTHON.0.tgz"
  cd "Python-$TARGET_PYTHON.0"
  ./configure --enable-optimizations
  make -j$(nproc)
  make altinstall

  PYTHON_BIN="/usr/local/bin/python$TARGET_PYTHON"
else
  PYTHON_BIN=$(which python3)
  log "Python is up to date. Using $PYTHON_BIN"
fi

# === 2. Setup directory & venv ===
log "Preparing bot directory..."
mkdir -p "$INSTALL_DIR"
cd "$INSTALL_DIR"

if [[ ! -f config.json ]]; then
  error "Config file not found! Run setup_config.sh first."
  exit 1
fi

log "Creating virtual environment..."
$PYTHON_BIN -m venv venv
source venv/bin/activate

log "Upgrading pip..."
pip install --upgrade pip

# === 3. Download project files ===
log "Downloading main.py..."
wget -O main.py "$MAIN_PY_URL"

log "Downloading requirements.txt..."
wget -O requirements.txt "$REQS_URL"

# === 4. Install deps ===
log "Installing dependencies..."
pip install -r requirements.txt

# === 5. Create systemd service ===
SERVICE_FILE="/etc/systemd/system/$SERVICE_NAME"
log "Creating systemd service..."

cat > "$SERVICE_FILE" <<EOF
[Unit]
Description=Telegram Bot Service
After=network.target

[Service]
Type=simple
User=root
WorkingDirectory=$INSTALL_DIR
ExecStart=$INSTALL_DIR/venv/bin/python3 main.py
Restart=always

[Install]
WantedBy=multi-user.target
EOF

log "Reloading systemd..."
systemctl daemon-reexec
systemctl daemon-reload
systemctl enable $SERVICE_NAME
systemctl restart $SERVICE_NAME

log "Bot service started!"
systemctl status $SERVICE_NAME --no-pager
